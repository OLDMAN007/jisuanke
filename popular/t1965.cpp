//
// Created by OLD MAN on 2020/1/10.
//
//蒜头君喜欢图形，而且喜欢把图形倒过来欣赏。有一次，他看见杨辉三角形，觉得很新鲜。杨辉三角是如下三角形。
//
//   1
//  1 1
// 1 2 1
//1 3 3 1
//
//可以发现杨辉三角的每个位置的值是左上角的值加上右上角的值。
//
//现在蒜头君选择前面 n 行，然后把图形倒过来。但是蒜头君是手工画的，你却可以用编程更快捷地做出来，多爽啊!
//
//输入格式\
//输入一行一个整数 n(1≤n≤5)，表示选择的行数。
//
//输出格式\
//输出 n 行倒的杨辉三角（每一行相邻的数之间用一个空格隔开）。

#include <iostream>
using namespace std;
int main(){
    int n;
    cin>>n;

    int a[100][100] = {0};
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < i + 1; ++j) {
            if (j == 0 || j == i){
                a[i][j] = 1;
            } else {
                a[i][j] = a[i - 1][j - 1] + a[i - 1][j];
            }
        }
    }

    for (int k = n - 1; k >= 0; --k) {
        for (int i = 0; i <= k; ++i) {
            cout<<a[k][i]<<" ";
        }
        cout<<endl;
        for (int j = 0; j < n - k; ++j) {
            cout<<" ";
        }
    }
}